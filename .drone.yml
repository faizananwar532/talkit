---
kind: pipeline
type: docker
name: build

trigger:
  branch:
  - main
  event:
  - push
  - pull_requestx

steps:
  - name: build-auth
    pull: if-not-exists
    image: google/cloud-sdk:latest
    environment:
      DRONE_SA:
        from_secret: st-drone
    depends_on: [ clone ]
    commands:
    - echo $DRONE_SA | base64 -d > gcp-key.json
    - gcloud auth activate-service-account --key-file gcp-key.json
    - gcloud config set core/project talkit-prod
    - cd backend/auth
    - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}
  
  - name: build-chat
    pull: if-not-exists
    image: google/cloud-sdk:latest
    environment:
      DRONE_SA:
        from_secret: st-drone
    depends_on: [ clone ]
    commands:
    - echo $DRONE_SA | base64 -d > gcp-key.json
    - gcloud auth activate-service-account --key-file gcp-key.json
    - gcloud config set core/project talkit-prod
    - cd backend/chat
    - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}
  
  - name: build-web
    pull: if-not-exists
    image: google/cloud-sdk:latest
    environment:
      DRONE_SA:
        from_secret: st-drone
    depends_on: [ clone ]
    commands:
    - echo $DRONE_SA | base64 -d > gcp-key.json
    - gcloud auth activate-service-account --key-file gcp-key.json
    - gcloud config set core/project talkit-prod
    - cd web
    - gcloud builds submit --config=cloudbuild.yaml --substitutions=_COMMIT_SHA=${DRONE_COMMIT:0:7}

---
kind: pipeline
type: docker
name: production

trigger:
  branch: 
  - main
  event:
  - pushxxx
  - pull_request

# depends_on:
# - build

steps:
  - name: deploy_talkit
    pull: if-not-exists
    image: google/cloud-sdk:latest
    environment:
      DRONE_SA:
        from_secret: st-drone
      POSTGRES_PASSWORD:
        from_secret: postgresql-password
      REDIS_PASSWORD:
        from_secret: redis-password
      ACCESS_TOKEN_SECRET_KEY: 
        from_secret: auth-access-token-key
      REFRESH_TOKEN_SECRET_KEY: 
        from_secret: auth-refresh-token-key
      USER_ACTIVATION_TOKEN_SECRET_KEY:
        from_secret: auth-user-activation-key
      GOOGLE_OAUTH_CLIENT_ID:
        from_secret: google-oauth-client-id
      GOOGLE_OAUTH_CLIENT_SECRET:
        from_secret: google-oauth-client-secret
      MG_API_KEY:
        from_secret: mg-private-key
    depends_on: [ clone ]
    commands:
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh
    - echo $DRONE_SA | base64 -d > gcp-key.json
    - gcloud auth activate-service-account --key-file gcp-key.json
    - gcloud config set core/project talkit-prod
    - gcloud container clusters get-credentials prod --zone us-central1-a --project talkit-prod
    - kubectl config use-context gke_talkit-prod_us-central1-a_prod
    - cd infra/main-chart
    - helm upgrade --install prod . --namespace prod --set namespace="prod" --set tag="7e01549" --set postgresql.postgresqlPassword="$POSTGRES_PASSWORD" --set google.sa_key="$DRONE_SA" --set secrets.accessTokenKey="$ACCESS_TOKEN_SECRET_KEY" --set secrets.refreshTokenKey="$REFRESH_TOKEN_SECRET_KEY" --set secrets.userActivationTokenKey="$USER_ACTIVATION_TOKEN_SECRET_KEY" --set google.oauthClientID="$GOOGLE_OAUTH_CLIENT_ID" --set google.oauthClientSecret="$GOOGLE_OAUTH_CLIENT_SECRET" --set mailgun.apiKey="$MG_API_KEY" --set redis.password="$REDIS_PASSWORD"

---
kind: signature
hmac: 4d06c65ae8026ae6e2dd47d2b4f7fbbd26c2f5b03a460074e4ad3bc2ab8e09fe

...
